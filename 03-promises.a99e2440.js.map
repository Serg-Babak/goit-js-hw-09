{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAYF,SAASC,cAAc,UAEnCE,EAAkB,GA+BxB,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAU,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEM,SAAAV,EAAUW,MAAAV,IAEpBI,EAAO,CAAEK,SAAAV,EAAUW,MAAAV,G,GAEpBA,E,IAGLC,EAAQU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACxBG,EAAAtB,GAASuB,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAExET,EAAQgB,OAAM,SAAAL,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACzBG,EAAAtB,GAASuB,OAAOI,QAAQ,sBAAqCF,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAIvEjB,EAAK0B,iBAAiB,SAjDE,SAAAC,GACI,UAAtBA,EAAMC,OAAOC,OACfzB,EAAgBa,MAAQa,OAAOH,EAAMC,OAAOG,QAEpB,SAAtBJ,EAAMC,OAAOC,OACfzB,EAAgB4B,KAAOF,OAAOH,EAAMC,OAAOG,QAEnB,WAAtBJ,EAAMC,OAAOC,OACfzB,EAAgB6B,OAASH,OAAOH,EAAMC,OAAOG,QAE/CG,QAAQC,IAAI/B,E,IAwCdD,EAAUuB,iBAAiB,SArCF,SAAAU,GACvBA,EAAEC,iBAIF,IAFA,IAAIpB,EAAQb,EAAgBa,MACxBD,EAAW,EACNsB,EAAI,EAAGA,EAAIlC,EAAgB6B,OAAQK,GAAK,EAI/CjC,EAFAW,GAAY,EADZC,GAASb,EAAgB4B,MAMNhC,EAAduC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst submitBtn = document.querySelector('button');\n\nconst formInputValues = {};\n\nconst handleFormInput = event => {\n  if (event.target.name === 'delay') {\n    formInputValues.delay = Number(event.target.value);\n  }\n  if (event.target.name === 'step') {\n    formInputValues.step = Number(event.target.value);\n  }\n  if (event.target.name === 'amount') {\n    formInputValues.amount = Number(event.target.value);\n  }\n  console.log(formInputValues);\n};\n\nconst onClickSubmitBtn = e => {\n  e.preventDefault();\n\n  let delay = formInputValues.delay;\n  let position = 0;\n  for (let i = 0; i < formInputValues.amount; i += 1) {\n    delay += formInputValues.step;\n    position += 1;\n\n    createPromise(position, delay);\n    // e.currentTarget.reset();\n    // Чомусь не працює через e.currentTarget.reset();\n    form.reset();\n  }\n};\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise.then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  });\n  promise.catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n}\n\nform.addEventListener('input', handleFormInput);\nsubmitBtn.addEventListener('click', onClickSubmitBtn);"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$submitBtn","$ce04d3a99e08e73b$var$formInputValues","$ce04d3a99e08e73b$var$createPromise","position1","delay1","promise","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","event","target","name","Number","value","step","amount","console","log","e","preventDefault","i","reset"],"version":3,"file":"03-promises.a99e2440.js.map"}