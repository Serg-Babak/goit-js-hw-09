{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAYF,SAASC,cAAc,UAEnCE,EAAkB,GA+BxB,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAU,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,CAAEM,SAAAV,EAAUW,MAAAV,IAEpBI,EAAO,CAAEK,SAAAV,EAAUW,MAAAV,GAAQ,GAE5BA,EAAM,IAGXC,EAAQU,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACxBE,EAAArB,GAASsB,OAAOC,QAAQ,uBAAqBL,QAAiBC,MAAU,IAE1ET,EAAQc,OAAM,EAACN,SAAEA,EAAQC,MAAEA,MACzBE,EAAArB,GAASsB,OAAOG,QAAQ,sBAAoBP,QAAeC,MAAU,G,CAIzEjB,EAAKwB,iBAAiB,SAjDEC,IACI,UAAtBA,EAAMC,OAAOC,OACfvB,EAAgBa,MAAQW,OAAOH,EAAMC,OAAOG,QAEpB,SAAtBJ,EAAMC,OAAOC,OACfvB,EAAgB0B,KAAOF,OAAOH,EAAMC,OAAOG,QAEnB,WAAtBJ,EAAMC,OAAOC,OACfvB,EAAgB2B,OAASH,OAAOH,EAAMC,OAAOG,QAE/CG,QAAQC,IAAI7B,EAAgB,IAwC9BD,EAAUqB,iBAAiB,SArCFU,IACvBA,EAAEC,iBAEF,IAAIlB,EAAQb,EAAgBa,MACxBD,EAAW,EACf,IAAK,IAAIoB,EAAI,EAAGA,EAAIhC,EAAgB2B,OAAQK,GAAK,EAC/CnB,GAASb,EAAgB0B,KACzBd,GAAY,EAEZX,EAAcW,EAAUC,GAGLjB,EAAdqC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst submitBtn = document.querySelector('button');\n\nconst formInputValues = {};\n\nconst handleFormInput = event => {\n  if (event.target.name === 'delay') {\n    formInputValues.delay = Number(event.target.value);\n  }\n  if (event.target.name === 'step') {\n    formInputValues.step = Number(event.target.value);\n  }\n  if (event.target.name === 'amount') {\n    formInputValues.amount = Number(event.target.value);\n  }\n  console.log(formInputValues);\n};\n\nconst onClickSubmitBtn = e => {\n  e.preventDefault();\n\n  let delay = formInputValues.delay;\n  let position = 0;\n  for (let i = 0; i < formInputValues.amount; i += 1) {\n    delay += formInputValues.step;\n    position += 1;\n\n    createPromise(position, delay);\n    // e.currentTarget.reset();\n    // Чомусь не працює через e.currentTarget.reset();\n    form.reset();\n  }\n};\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise.then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  });\n  promise.catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n}\n\nform.addEventListener('input', handleFormInput);\nsubmitBtn.addEventListener('click', onClickSubmitBtn);"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$submitBtn","$47d4ff9957288465$var$formInputValues","$47d4ff9957288465$var$createPromise","position1","delay1","promise","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","$parcel$interopDefault","Notify","success","catch","failure","addEventListener","event","target","name","Number","value","step","amount","console","log","e","preventDefault","i","reset"],"version":3,"file":"03-promises.d97af896.js.map"}